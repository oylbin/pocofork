# 这是一个获取操作系统名称的技巧
# 在Windows上，默认带环境变量OS=Windows_NT，因此不会执行`uname -s`
# 在Linux上，执行`uname -s`会返回Linux
# 在macOS上，执行`uname -s`会返回Darwin
OS ?= $(shell uname -s)
TARGET_PROFILE ?= default
CONAN_HOME ?= $(HOME)/.conan2
CI_PROJECT_DIR ?= $(shell pwd)
CI_COMMIT_TAG ?= 0.0.1-latest
POCO_VERSION := $(CI_COMMIT_TAG)


ifeq ($(OS),Windows_NT)
# Windows gitlab runner 无法访问到 $HOME/bin，所以把 conan 安装到项目目录下
CONAN := $(CI_PROJECT_DIR)/bin/conan
else ifeq ($(OS),Linux)
CONAN := $(HOME)/bin/conan
else ifeq ($(OS),Darwin)
ARCH := $(shell uname -m)
# macos 某些 gitlab runner 无法访问到 $HOME/bin，所以把 conan 安装到项目目录下
CONAN := $(CI_PROJECT_DIR)/bin/conan
endif

# conan_setup： 安装 conan
# conan_config: 配置 conan，profile & remote
# conan_build: 编译 conan crete & test with test_package
# conan_upload: 打包 conan upload
.PHONY: all conan_setup conan_config conan_build conan_upload

all: conan_setup conan_config conan_build conan_upload


$(CONAN):
ifeq ($(OS),Windows_NT)
	test -e $(CI_PROJECT_DIR)/bin/conan.exe || ( \
		curl -o conan.zip https://git.youle.game/opensource/thirdparty/poco/uploads/f109f4e0b49606c811feee5932e597a4/conan-2.3.0-windows-x86_64.zip && \
		unzip -d $(CI_PROJECT_DIR)/bin conan.zip && \
		rm conan.zip )
else ifeq ($(OS),Linux)
	test -e $(CONAN) || ( \
		echo "conan binary should be installed in the Docker image." && \
		exit 1 )
else ifeq ($(OS),Darwin)
	test -e $(CI_PROJECT_DIR)/bin/conan || ( \
		curl -o /tmp/conan-2.3.0-macos.tgz https://nexus.youle.game/repository/raw/conan/conan-2.3.0-macos-$(ARCH).tgz && \
		tar zxf /tmp/conan-2.3.0-macos.tgz -C $(CI_PROJECT_DIR) && \
		rm /tmp/conan-2.3.0-macos.tgz )
endif

conan_setup: $(CONAN)
	@echo "Conan is installed at $<"


conan_config:
	$(CONAN) profile detect -e
ifeq ($(OS),Darwin)
	# 有一台macos的runner，默认的profile是gnu98，需要修改为gnu14
	sed -i '' 's/gnu98/gnu14/g' `$(CONAN) profile path default`
	cp conan_profiles/ios $(CONAN_HOME)/profiles/
endif
ifeq ($(OS),Linux)
	cp conan_profiles/android* $(CONAN_HOME)/profiles/
endif
	$(CONAN) profile show --profile $(TARGET_PROFILE)

conan_build:
	$(CONAN) create . --profile $(TARGET_PROFILE) -s build_type=Release

conan_upload:
	$(CONAN) remote add --insecure -f youle http://192.168.212.47:8081/artifactory/api/conan/conan-local
	$(CONAN) remote login  youle raven -p vMeqrUHcyyH4tL8L
	$(CONAN) upload poco/`$(CONAN) inspect conanfile.py | grep version | awk '{print $$NF}'` -r=youle
	$(CONAN) list poco/`$(CONAN) inspect conanfile.py | grep version | awk '{print $$NF}'`:*  -r=youle
